{"ast":null,"code":"const BASE_URL = \"http://127.0.0.1:8000\";\nexport async function extractSkills(file) {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await fetch(`${BASE_URL}/candidate/extract-skills/`, {\n    method: \"POST\",\n    body: formData\n  });\n  return res.json();\n}\nexport async function matchJob(jobDescription, candidateBio) {\n  const res = await fetch(`${BASE_URL}/job/match/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      job_description: jobDescription,\n      candidate_bio: candidateBio\n    })\n  });\n  return res.json();\n}\nexport async function getRecommendations(candidateBio) {\n  const res = await fetch(`${BASE_URL}/recommend/jobs/`, {\n    // ✅ URL matches backend\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      candidate_bio: candidateBio\n    }) // ✅ key matches Pydantic model\n  });\n  return res.json();\n}\n\n// export async function getRecommendations(userProfile) {\n//   const res = await fetch(`${BASE_URL}/recommend/recommend/`, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({ user_profile: userProfile })\n//   });\n//   return res.json();\n// }","map":{"version":3,"names":["BASE_URL","extractSkills","file","formData","FormData","append","res","fetch","method","body","json","matchJob","jobDescription","candidateBio","headers","JSON","stringify","job_description","candidate_bio","getRecommendations"],"sources":["/Users/alexa_kurapati/Documents/RizeOS/frontend/src/api.js"],"sourcesContent":["const BASE_URL = \"http://127.0.0.1:8000\";\n\nexport async function extractSkills(file) {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await fetch(`${BASE_URL}/candidate/extract-skills/`, {\n    method: \"POST\",\n    body: formData\n  });\n  return res.json();\n}\n\nexport async function matchJob(jobDescription, candidateBio) {\n  const res = await fetch(`${BASE_URL}/job/match/`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ job_description: jobDescription, candidate_bio: candidateBio })\n  });\n  return res.json();\n}\n\nexport async function getRecommendations(candidateBio) {\n  const res = await fetch(`${BASE_URL}/recommend/jobs/`, {  // ✅ URL matches backend\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ candidate_bio: candidateBio })    // ✅ key matches Pydantic model\n  });\n  return res.json();\n}\n\n// export async function getRecommendations(userProfile) {\n//   const res = await fetch(`${BASE_URL}/recommend/recommend/`, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({ user_profile: userProfile })\n//   });\n//   return res.json();\n// }\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,OAAO,eAAeC,aAAaA,CAACC,IAAI,EAAE;EACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7B,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,4BAA4B,EAAE;IAC/DQ,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEN;EACR,CAAC,CAAC;EACF,OAAOG,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,QAAQA,CAACC,cAAc,EAAEC,YAAY,EAAE;EAC3D,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,aAAa,EAAE;IAChDQ,MAAM,EAAE,MAAM;IACdM,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;MAAEC,eAAe,EAAEL,cAAc;MAAEM,aAAa,EAAEL;IAAa,CAAC;EACvF,CAAC,CAAC;EACF,OAAOP,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeS,kBAAkBA,CAACN,YAAY,EAAE;EACrD,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,kBAAkB,EAAE;IAAG;IACxDQ,MAAM,EAAE,MAAM;IACdM,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;MAAEE,aAAa,EAAEL;IAAa,CAAC,CAAC,CAAI;EAC3D,CAAC,CAAC;EACF,OAAOP,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}