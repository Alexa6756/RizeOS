{"ast":null,"code":"var _jsxFileName = \"/Users/alexa_kurapati/Documents/RizeOS/frontend/src/components/RecommendationsList.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { getRecommendations } from \"../api\";\n\n// export default function RecommendationsList() {\n//   const [profile, setProfile] = useState(\"\");\n//   const [jobs, setJobs] = useState([]);\n\n//   const handleRecommend = async () => {\n//     const data = await getRecommendations(profile);\n//     setJobs(data.recommendations);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Smart Job Recommendations</h2>\n//       <textarea\n//         placeholder=\"Your Profile\"\n//         value={profile}\n//         onChange={(e) => setProfile(e.target.value)}\n//       />\n//       <button onClick={handleRecommend}>Get Recommendations</button>\n//       {jobs.length > 0 && (\n//         <ul>\n//           {jobs.map((job, i) => (\n//             <li key={i}>\n//               {job.job_title} — {job.score}%\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { getRecommendations } from \"../api\";\n\n// export default function RecommendationsList() {\n//   const [profile, setProfile] = useState(\"\");\n//   const [jobs, setJobs] = useState([]);\n\n//   const handleRecommend = async () => {\n//     const data = await getRecommendations(profile);\n//     setJobs(data.recommendations);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Smart Job Recommendations</h2>\n//       <textarea\n//         placeholder=\"Your Profile\"\n//         value={profile}\n//         onChange={(e) => setProfile(e.target.value)}\n//       />\n//       <button onClick={handleRecommend}>Get Recommendations</button>\n\n//       {jobs.length > 0 && (\n//         <ul>\n//           {jobs.map((job, i) => (\n//             <li key={i}>\n//               {job.title} — {Number(job.score).toFixed(2)}%\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { getRecommendations } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecommendationsList() {\n  _s();\n  const [profile, setProfile] = useState(\"\");\n  const [jobs, setJobs] = useState([]); // initialize as empty array\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleRecommend = async () => {\n    if (!profile.trim()) {\n      setError(\"Profile cannot be empty.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await getRecommendations(profile);\n      console.log(\"API Response:\", data); // debug\n      setJobs(data.recommendations || []); // fallback to empty array\n    } catch (err) {\n      console.error(err);\n      setJobs([]); // fallback if API fails\n      setError(\"Failed to fetch recommendations.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart Job Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Your Profile\",\n      value: profile,\n      onChange: e => setProfile(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRecommend,\n      disabled: loading,\n      children: loading ? \"Loading...\" : \"Get Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), jobs && jobs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map((job, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [job.title, \" \\u2014 \", Number(job.score).toFixed(2), \"%\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recommendations yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(RecommendationsList, \"M6pB7uXk/gfAyws9Ip0bZqyRsdg=\");\n_c = RecommendationsList;\nvar _c;\n$RefreshReg$(_c, \"RecommendationsList\");","map":{"version":3,"names":["React","useState","getRecommendations","jsxDEV","_jsxDEV","RecommendationsList","_s","profile","setProfile","jobs","setJobs","loading","setLoading","error","setError","handleRecommend","trim","data","console","log","recommendations","err","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","disabled","style","color","length","map","job","i","title","Number","score","toFixed","_c","$RefreshReg$"],"sources":["/Users/alexa_kurapati/Documents/RizeOS/frontend/src/components/RecommendationsList.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { getRecommendations } from \"../api\";\n\n// export default function RecommendationsList() {\n//   const [profile, setProfile] = useState(\"\");\n//   const [jobs, setJobs] = useState([]);\n\n//   const handleRecommend = async () => {\n//     const data = await getRecommendations(profile);\n//     setJobs(data.recommendations);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Smart Job Recommendations</h2>\n//       <textarea\n//         placeholder=\"Your Profile\"\n//         value={profile}\n//         onChange={(e) => setProfile(e.target.value)}\n//       />\n//       <button onClick={handleRecommend}>Get Recommendations</button>\n//       {jobs.length > 0 && (\n//         <ul>\n//           {jobs.map((job, i) => (\n//             <li key={i}>\n//               {job.job_title} — {job.score}%\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { getRecommendations } from \"../api\";\n\n// export default function RecommendationsList() {\n//   const [profile, setProfile] = useState(\"\");\n//   const [jobs, setJobs] = useState([]);\n\n//   const handleRecommend = async () => {\n//     const data = await getRecommendations(profile);\n//     setJobs(data.recommendations);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Smart Job Recommendations</h2>\n//       <textarea\n//         placeholder=\"Your Profile\"\n//         value={profile}\n//         onChange={(e) => setProfile(e.target.value)}\n//       />\n//       <button onClick={handleRecommend}>Get Recommendations</button>\n\n//       {jobs.length > 0 && (\n//         <ul>\n//           {jobs.map((job, i) => (\n//             <li key={i}>\n//               {job.title} — {Number(job.score).toFixed(2)}%\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { getRecommendations } from \"../api\";\n\nexport default function RecommendationsList() {\n  const [profile, setProfile] = useState(\"\");\n  const [jobs, setJobs] = useState([]);       // initialize as empty array\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleRecommend = async () => {\n    if (!profile.trim()) {\n      setError(\"Profile cannot be empty.\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await getRecommendations(profile);\n      console.log(\"API Response:\", data);                 // debug\n      setJobs(data.recommendations || []);               // fallback to empty array\n    } catch (err) {\n      console.error(err);\n      setJobs([]);                                      // fallback if API fails\n      setError(\"Failed to fetch recommendations.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Smart Job Recommendations</h2>\n      <textarea\n        placeholder=\"Your Profile\"\n        value={profile}\n        onChange={(e) => setProfile(e.target.value)}\n      />\n      <button onClick={handleRecommend} disabled={loading}>\n        {loading ? \"Loading...\" : \"Get Recommendations\"}\n      </button>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      {jobs && jobs.length > 0 ? (\n        <ul>\n          {jobs.map((job, i) => (\n            <li key={i}>\n              {job.title} — {Number(job.score).toFixed(2)}%\n            </li>\n          ))}\n        </ul>\n      ) : (\n        !loading && <p>No recommendations yet.</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,kBAAkB,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAO;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACR,OAAO,CAACS,IAAI,CAAC,CAAC,EAAE;MACnBF,QAAQ,CAAC,0BAA0B,CAAC;MACpC;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMG,IAAI,GAAG,MAAMf,kBAAkB,CAACK,OAAO,CAAC;MAC9CW,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAiB;MACpDP,OAAO,CAACO,IAAI,CAACG,eAAe,IAAI,EAAE,CAAC,CAAC,CAAe;IACrD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZH,OAAO,CAACL,KAAK,CAACQ,GAAG,CAAC;MAClBX,OAAO,CAAC,EAAE,CAAC,CAAC,CAAsC;MAClDI,QAAQ,CAAC,kCAAkC,CAAC;IAC9C,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCtB,OAAA;MACEuB,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAErB,OAAQ;MACfsB,QAAQ,EAAGC,CAAC,IAAKtB,UAAU,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFtB,OAAA;MAAQ4B,OAAO,EAAEjB,eAAgB;MAACkB,QAAQ,EAAEtB,OAAQ;MAAAW,QAAA,EACjDX,OAAO,GAAG,YAAY,GAAG;IAAqB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EAERb,KAAK,iBAAIT,OAAA;MAAG8B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAET;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEhDjB,IAAI,IAAIA,IAAI,CAAC2B,MAAM,GAAG,CAAC,gBACtBhC,OAAA;MAAAkB,QAAA,EACGb,IAAI,CAAC4B,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACfnC,OAAA;QAAAkB,QAAA,GACGgB,GAAG,CAACE,KAAK,EAAC,UAAG,EAACC,MAAM,CAACH,GAAG,CAACI,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,GAC9C;MAAA,GAFSJ,CAAC;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,GAEL,CAACf,OAAO,iBAAIP,OAAA;MAAAkB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAvDuBD,mBAAmB;AAAAuC,EAAA,GAAnBvC,mBAAmB;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}