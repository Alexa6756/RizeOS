{"ast":null,"code":"// const BASE_URL = \"http://127.0.0.1:8000\";\n\n// export async function extractSkills(file) {\n//   const formData = new FormData();\n//   formData.append(\"file\", file);\n//   const res = await fetch(`${BASE_URL}/candidate/extract-skills/`, {\n//     method: \"POST\",\n//     body: formData\n//   });\n//   return res.json();\n// }\n\n// export async function matchJob(jobDescription, candidateBio) {\n//   const res = await fetch(`${BASE_URL}/job/match/`, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({ job_description: jobDescription, candidate_bio: candidateBio })\n//   });\n//   return res.json();\n// }\n\n// export async function getRecommendations(userProfile) {\n//   const res = await fetch(`${BASE_URL}/recommend/recommend/`, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({ user_profile: userProfile })\n//   });\n//   return res.json();\n// }\n\nconst BASE_URL = \"http://127.0.0.1:8000\";\n\n// === Extract skills from a candidate file ===\nexport async function extractSkills(file) {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await fetch(`${BASE_URL}/candidate/extract-skills/`, {\n    method: \"POST\",\n    body: formData\n  });\n  if (!res.ok) throw new Error(\"Failed to extract skills\");\n  return res.json();\n}\n\n// === Match a candidate with a job description ===\nexport async function matchJob(jobDescription, candidateBio) {\n  const res = await fetch(`${BASE_URL}/job/match/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      job_description: jobDescription,\n      candidate_bio: candidateBio\n    })\n  });\n  if (!res.ok) throw new Error(\"Failed to match job\");\n  return res.json();\n}\n\n// === Get smart job recommendations for a candidate profile ===\nexport async function getRecommendations(userProfile) {\n  const res = await fetch(`${BASE_URL}/recommend/jobs/`, {\n    // ✅ matches backend\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      candidate_bio: userProfile\n    }) // ✅ match backend model\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch recommendations\");\n  return res.json();\n}","map":{"version":3,"names":["BASE_URL","extractSkills","file","formData","FormData","append","res","fetch","method","body","ok","Error","json","matchJob","jobDescription","candidateBio","headers","JSON","stringify","job_description","candidate_bio","getRecommendations","userProfile"],"sources":["/Users/alexa_kurapati/Documents/ai_project/frontend/src/api.js"],"sourcesContent":["// const BASE_URL = \"http://127.0.0.1:8000\";\n\n// export async function extractSkills(file) {\n//   const formData = new FormData();\n//   formData.append(\"file\", file);\n//   const res = await fetch(`${BASE_URL}/candidate/extract-skills/`, {\n//     method: \"POST\",\n//     body: formData\n//   });\n//   return res.json();\n// }\n\n// export async function matchJob(jobDescription, candidateBio) {\n//   const res = await fetch(`${BASE_URL}/job/match/`, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({ job_description: jobDescription, candidate_bio: candidateBio })\n//   });\n//   return res.json();\n// }\n\n// export async function getRecommendations(userProfile) {\n//   const res = await fetch(`${BASE_URL}/recommend/recommend/`, {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({ user_profile: userProfile })\n//   });\n//   return res.json();\n// }\n\nconst BASE_URL = \"http://127.0.0.1:8000\";\n\n// === Extract skills from a candidate file ===\nexport async function extractSkills(file) {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n\n  const res = await fetch(`${BASE_URL}/candidate/extract-skills/`, {\n    method: \"POST\",\n    body: formData\n  });\n\n  if (!res.ok) throw new Error(\"Failed to extract skills\");\n  return res.json();\n}\n\n// === Match a candidate with a job description ===\nexport async function matchJob(jobDescription, candidateBio) {\n  const res = await fetch(`${BASE_URL}/job/match/`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      job_description: jobDescription,\n      candidate_bio: candidateBio\n    })\n  });\n\n  if (!res.ok) throw new Error(\"Failed to match job\");\n  return res.json();\n}\n\n// === Get smart job recommendations for a candidate profile ===\nexport async function getRecommendations(userProfile) {\n  const res = await fetch(`${BASE_URL}/recommend/jobs/`, {  // ✅ matches backend\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ candidate_bio: userProfile })     // ✅ match backend model\n  });\n\n  if (!res.ok) throw new Error(\"Failed to fetch recommendations\");\n  return res.json();\n}\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAG,uBAAuB;;AAExC;AACA,OAAO,eAAeC,aAAaA,CAACC,IAAI,EAAE;EACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,4BAA4B,EAAE;IAC/DQ,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEN;EACR,CAAC,CAAC;EAEF,IAAI,CAACG,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxD,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeC,QAAQA,CAACC,cAAc,EAAEC,YAAY,EAAE;EAC3D,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,aAAa,EAAE;IAChDQ,MAAM,EAAE,MAAM;IACdQ,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CP,IAAI,EAAEQ,IAAI,CAACC,SAAS,CAAC;MACnBC,eAAe,EAAEL,cAAc;MAC/BM,aAAa,EAAEL;IACjB,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACT,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACnD,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeS,kBAAkBA,CAACC,WAAW,EAAE;EACpD,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,kBAAkB,EAAE;IAAG;IACxDQ,MAAM,EAAE,MAAM;IACdQ,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CP,IAAI,EAAEQ,IAAI,CAACC,SAAS,CAAC;MAAEE,aAAa,EAAEE;IAAY,CAAC,CAAC,CAAK;EAC3D,CAAC,CAAC;EAEF,IAAI,CAAChB,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EAC/D,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}